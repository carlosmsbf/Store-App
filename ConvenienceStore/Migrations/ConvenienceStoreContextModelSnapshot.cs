// <auto-generated />
using System;
using ConvenienceStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConvenienceStore.Migrations
{
    [DbContext(typeof(ConvenienceStoreContext))]
    partial class ConvenienceStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConvenienceStore.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "LG"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sony"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Xiaomi"
                        },
                        new
                        {
                            Id = 6,
                            Name = "MSI"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Dell"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Microsoft"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Insignia"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Hamilton"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Nespresso"
                        });
                });

            modelBuilder.Entity("ConvenienceStore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Cellphones",
                            Name = "Cellphone"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Television",
                            Name = "TV"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Portatil Computer",
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 4,
                            Description = "PlayStation, Xbox or Wii console",
                            Name = "Gaming Console"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Ipad, Galaxy note and others.",
                            Name = "Tablet"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Echo Dot, Google Cast, Alexia Fire, and others.",
                            Name = "Home Appliances"
                        });
                });

            modelBuilder.Entity("ConvenienceStore.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("ConvenienceStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 2,
                            Description = "55 inch 4K OLED Smart TV",
                            Name = "OLED TV"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CategoryId = 2,
                            Description = "75 inch 8K QLED Smart TV",
                            Name = "OLED TV"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 2,
                            CategoryId = 2,
                            Description = "65 inch 4K Smart TV",
                            Name = "Smart TV"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 3,
                            CategoryId = 2,
                            Description = "75 inch 4K HDR LED Smart TV",
                            Name = "X80J TV"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 2,
                            CategoryId = 1,
                            Description = "6.1 inch display, 1080x2340 pixels, 50MP Camera, 8GB RAM, 250GB, Android 12",
                            Name = "Galaxy S22"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 2,
                            CategoryId = 1,
                            Description = "6.4 inch display, 1080x2400 pixels, 12MP Camera, 8GB RAM, 500GB, Android 12",
                            Name = "Samsung Galaxy S21"
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 11,
                            CategoryId = 6,
                            Description = "Nespresso Vertuo Coffee & Espresso Machine by DeLonghi w/ Aeroccino Milk Frother, Black",
                            Name = "Nespresso Vertuo Coffee"
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 10,
                            CategoryId = 6,
                            Description = "2-Slice toaster in chrome, high-lift boost toast function, Extra-wide slots",
                            Name = "Hamilton Beach Toaster"
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 9,
                            CategoryId = 6,
                            Description = "4.8L capacity, Stainless Steel, Hot air, 60 minutes timer",
                            Name = "Insignia Air Fryer"
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 1,
                            CategoryId = 6,
                            Description = "1.7cu, Over-the-Range Microwave Oven with EasyClean",
                            Name = "LG Microwave OTR"
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 1,
                            CategoryId = 6,
                            Description = "1.5cu, Countertop Microwave with Smart Inverter and EasyClean",
                            Name = "LG Microwave NeoChef"
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 2,
                            CategoryId = 5,
                            Description = "8.7 inch display, 32GB, Android 12",
                            Name = "Samsung Galaxy Tab A7"
                        },
                        new
                        {
                            Id = 16,
                            BrandId = 4,
                            CategoryId = 5,
                            Description = "Ipad 10.2 display, 6GB RAM, 500GB, 12MP Camera, iOS 15",
                            Name = "Apple Ipad"
                        });
                });

            modelBuilder.Entity("ConvenienceStore.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Profit")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfTransaction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("ConvenienceStore.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("ConvenienceStore.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("ConvenienceStore.Models.Inventory", b =>
                {
                    b.HasOne("ConvenienceStore.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ConvenienceStore.Models.Product", b =>
                {
                    b.HasOne("ConvenienceStore.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConvenienceStore.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ConvenienceStore.Models.Sale", b =>
                {
                    b.HasOne("ConvenienceStore.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("ConvenienceStore.Models.Store", b =>
                {
                    b.HasOne("ConvenienceStore.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");
                });
#pragma warning restore 612, 618
        }
    }
}
