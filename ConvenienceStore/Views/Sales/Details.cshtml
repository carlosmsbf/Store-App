@model ConvenienceStore.Models.Sale

@{
    ViewData["Title"] = "Details";
}

<div class="d-flex justify-content-center">
    <div class="card d-block bg-dark text-white " style="width:600px; border-radius: 22px;">
        <h3 class="d-flex justify-content-center">Sale Registered</h3>
    </div>

</div>

<hr />


<div class="card mt-3">
    <div class="card-header font-weight-bolder d-flex justify-content-center"> Product Information</div>
    <div class="card-body">
        <div class="card-body row">
            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    @Html.DisplayNameFor(model => model.Store.Inventory.Product.Category.Name)
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@Html.DisplayFor(model => model.Store.Inventory.Product.Category.Name)" />
            </div>

            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    @Html.DisplayNameFor(model => model.Store.Inventory.Product.Name)
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@Html.DisplayFor(model => model.Store.Inventory.Product.Name)" />
            </div>
            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    @Html.DisplayNameFor(model => model.Store.Inventory.Product.Brand)
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@Html.DisplayFor(model => model.Store.Inventory.Product.Brand.Name)" />
            </div>
        </div>
        <div class="form-group col-md">
            <label class="d-flex justify-content-center">
                @Html.DisplayNameFor(model => model.Store.Inventory.Product.Description)
            </label>
            <input class="form-control" style="border-radius: 22px;" disabled value="@Html.DisplayFor(model => model.Store.Inventory.Product.Description)" />
        </div>

    </div>
</div>

<div class="card mt-3">
    <div class="card-header font-weight-bolder d-flex justify-content-center"> Informação do Estoque</div>
    <div class="card-body">
        <div class="card-body row">

            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    @Html.DisplayNameFor(model => model.Store.Inventory.Id)
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@Html.DisplayFor(model => model.Store.Inventory.Id)" />
            </div>

            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    @Html.DisplayNameFor(model => model.Store.Inventory.Cost)
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@Html.DisplayFor(model => model.Store.Inventory.Cost)" />
            </div>

            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    @Html.DisplayNameFor(model => model.Store.Inventory.Date)
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@Html.DisplayFor(model => model.Store.Inventory.Date)" />
            </div>
        </div>
    </div>
</div>

<div class="card mt-3">
    <div class="card-header font-weight-bolder d-flex justify-content-center"> Informação da Loja</div>
    <div class="card-body">
        <div class="card-body row">

            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    @Html.DisplayNameFor(model => model.Store.Id)
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@Html.DisplayFor(model => model.Store.Id)" />
            </div>

            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    @Html.DisplayNameFor(model => model.Quantity)
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@Html.DisplayFor(model => model.Quantity)" />
            </div>


            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    @Html.DisplayNameFor(model => model.Store.Price)
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@Html.DisplayFor(model => model.Store.Price)" />
            </div>

            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    @Html.DisplayNameFor(model => model.Store.Date)
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@Html.DisplayFor(model => model.Store.Date)" />
            </div>
        </div>
    </div>
</div>

<div class="card mt-3">
    <div class="card-header font-weight-bolder d-flex justify-content-center"> Informação da Venda</div>
    <div class="card-body">
        <div class="card-body row">

            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    @Html.DisplayNameFor(model => model.Store.Id)
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@Html.DisplayFor(model => model.Id)" />
            </div>

            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    @Html.DisplayNameFor(model => model.Quantity)
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@Html.DisplayFor(model => model.Quantity)" />
            </div>

            @{ double cost = Model.Store.Inventory.Cost;
                    double price = Model.Store.Price;
                int quantity = Model.Quantity;

                string unitProfit = (price - cost).ToString();
                string totalProfit = ((price - cost) * quantity).ToString();
            }

            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    Lucro Unitário
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@unitProfit" />
            </div>

            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    Lucro Total
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@totalProfit" />
            </div>

            <div class="form-group col-md">
                <label class="d-flex justify-content-center">
                    @Html.DisplayNameFor(model => model.Store.Date)
                </label>
                <input class="form-control" style="border-radius: 22px;" disabled value="@Html.DisplayFor(model => model.Store.Date)" />
            </div>
        </div>
    </div>
</div>


<hr />
<div class="d-flex justify-content-center">
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary" style="border-radius: 35px;">Editar</a>
    <p>&ensp;</p>
    <a asp-action="Index" class="btn btn-light" style="border-radius: 35px;">Voltar</a>
</div>
